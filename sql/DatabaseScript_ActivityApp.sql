-- MySQL Script generated by MySQL Workbench
-- Sun May 17 12:56:11 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ActivitiesApp
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ActivitiesApp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ActivitiesApp` DEFAULT CHARACTER SET utf8 ;
USE `ActivitiesApp` ;

-- -----------------------------------------------------
-- Table `ActivitiesApp`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActivitiesApp`.`Categories` (
  `CategoryID` INT NOT NULL AUTO_INCREMENT,
  `CategoryCode` VARCHAR(50) NOT NULL,
  `CategoryName` VARCHAR(50) NOT NULL,
  `CategoryDescription` VARCHAR(1000) NULL,
  PRIMARY KEY (`CategoryID`),
  UNIQUE INDEX `CategoryCode_UNIQUE` (`CategoryCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActivitiesApp`.`PriceGroups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActivitiesApp`.`PriceGroups` (
  `PriceGroupID` INT NOT NULL AUTO_INCREMENT,
  `PriceGroupCode` VARCHAR(50) NOT NULL,
  `PriceGroupName` VARCHAR(50) NOT NULL,
  `PriceGroupDescription` VARCHAR(500) NULL,
  `PriceGroupStart` DECIMAL(10,2) NOT NULL,
  `PriceGroupEnd` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`PriceGroupID`),
  UNIQUE INDEX `PriceGroupCode_UNIQUE` (`PriceGroupCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActivitiesApp`.`Activities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActivitiesApp`.`Activities` (
  `ActivityID` INT NOT NULL AUTO_INCREMENT,
  `CategoryID` INT NOT NULL,
  `PriceGroupID` INT NOT NULL,
  `ActivityCode` VARCHAR(50) NOT NULL,
  `ActivityName` VARCHAR(100) NOT NULL,
  `ActivityDescription` VARCHAR(1000) NULL,
  `ActivityDescriptionShort` VARCHAR(100) NOT NULL,
  `ExternalURL` VARCHAR(500) NULL,
  `ActivityCost` DECIMAL(10,2) NOT NULL,
  `ActivityAgeMinimum` INT NOT NULL,
  `ActivityAgeMaximum` INT NOT NULL,
  PRIMARY KEY (`ActivityID`),
  INDEX `FK_Categories_CategoryID_idx` (`CategoryID` ASC),
  INDEX `FK_PrceGroups_PriceGroupID_idx` (`PriceGroupID` ASC),
  UNIQUE INDEX `ActivityCode_UNIQUE` (`ActivityCode` ASC),
  CONSTRAINT `FK_Categories_CategoryID`
    FOREIGN KEY (`CategoryID`)
    REFERENCES `ActivitiesApp`.`Categories` (`CategoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_PriceGroups_PriceGroupID`
    FOREIGN KEY (`PriceGroupID`)
    REFERENCES `ActivitiesApp`.`PriceGroups` (`PriceGroupID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActivitiesApp`.`AgeGroups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActivitiesApp`.`AgeGroups` (
  `AgeGroupID` INT NOT NULL AUTO_INCREMENT,
  `AgeGroupCode` VARCHAR(25) NOT NULL,
  `AgeGroupName` VARCHAR(50) NOT NULL,
  `AgeGroupDescription` VARCHAR(500) NULL,
  `AgeGroupStart` INT NOT NULL,
  `AgeGroupEnd` INT NOT NULL,
  PRIMARY KEY (`AgeGroupID`),
  UNIQUE INDEX `AgeGroupCode_UNIQUE` (`AgeGroupCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActivitiesApp`.`Bridge_ActivitiesAgeGroups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActivitiesApp`.`Bridge_ActivitiesAgeGroups` (
  `ActivitiesAgeGroupsID` INT NOT NULL AUTO_INCREMENT,
  `ActivityID` INT NOT NULL,
  `AgeGroupID` INT NOT NULL,
  PRIMARY KEY (`ActivitiesAgeGroupsID`),
  INDEX `FK_Activities_ActivityID_idx` (`ActivityID` ASC),
  INDEX `FK_AgeGroups_AgeGroupID_idx` (`AgeGroupID` ASC),
  CONSTRAINT `FK_Activities_ActivityID`
    FOREIGN KEY (`ActivityID`)
    REFERENCES `ActivitiesApp`.`Activities` (`ActivityID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_AgeGroups_AgeGroupID`
    FOREIGN KEY (`AgeGroupID`)
    REFERENCES `ActivitiesApp`.`AgeGroups` (`AgeGroupID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
